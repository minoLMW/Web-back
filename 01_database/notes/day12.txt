Day12

1. Join
    - join이 없는 SQL은 영어에서 Fire burns의 느낌
    - 여러 테이블에 분산되어 있는 정보 중 필요 정보만 가져와서
      결과를 만들어 내기 위한 방법
      * 왜 분산되어 있는가? => 정규화되어 있기 때문에 +
                             RDBMS는 원래 그렇기 때문이다.
    - join이 없다면 모든 데이터를 테이블마다 조회한 후
      엑셀로 합쳐야 한다.

(1) inner join
    - 가장 일반적인 조인의 형태
    - 조건에 맞는 데이터가 양쪽에 존재할 때
    - 두 테이블 사이의 관계를 반드시 기술해야 함

    emp                     salary
    emp_no  name            emp_no  sal
    1       ryu             1       5000
    2       david           2       4800

    이름과 급여를 보고싶다????
    select e.name, s.sal
    from   emp e
         , salaly s
    where  e.emp_no = s.emp_no

    신세계백화점에서 연간 2784만원을 구매하였음
    구매내역 테이블
    id      amt
    -------------
    m1      2784

    회원등급 테이블
    class   min_amt     max_amt
    ----------------------------
    black   2500        2999
    red     3000        5000

    m1이라는 회원은 무슨 등급인지 구하라
    select r.class
    from   구매내역 k, 회원등급 r
    where  k.id = 'm1'
    and    k.amt <= r.max_amt
    and    k.amt >= r.min_amt

    and    k.amt between r.min_amt and r.max_amt

    - 항상 등가(=)로만 조인하는 것은 아니다.
    - 표준 문법
        select 나이, 상세주소
        from   국민정보 inner join 주소
                       on 국민정보.주민번호 = 주소.주민번호

    - 간소화 문법
        select 나이, 상세주소
        from   국민정보
             , 상세주소
        where  국민정보.주민번호 = 상세주소.주민번호

    - 조인 조건 없이 조인하는 것을
      catesian product라고 함(일반적으로는 실수)

(2) natural join
    - 두 개 테이블 조인 시
      컬럼명이 같은 컬럼을 자동으로 inner join을 수행
    - 테이블1 natural join 테이블2

    => 아무도 안쓴다 => 쓰면 혼낸다
      컬럼명이 같다고 같은 데이터인가??? 보장 없음
      => 실무에선 활용하지 않음

(3) Outer join
    - inner join은 두 개 테이블이 조건들을 만족할 때
      결과가 나옴
    - 한 쪽의 데이터는 있는데, 다른 쪽의 데이터는 없는 경우
    - 부족한 쪽의 데이터를 누락하지 않고 나오게 하는 조인
    - 3가지 종류가 존재함
         A left outer join B : A를 기준으로 B가 없어도
         A right outer join B : B를 기준으로 A가 없어도
         A full outer join B : A, B 둘 다 기준

      A : 국제 범죄자 리스트(manid)
      B : 한국인 주소가 있는 한국인 데이터 테이블(manid)

      select A.name, B.address
      from   A, B
      where  A.manid = B.manid

      => 국제 범죄자 중 한국에 주소가 있는 놈만 나옴

      만약 내가 원하는 데이터는 한국에 주소가 있으면 나오고
      없으면 말고(null)라면?

      select A.name, B.address
      from   A left outer join B
               on A.manid = B.manid

      => 국제 범죄자 중 한국 주소가 있는 놈은 한국 주소,
         없는 놈은 (null)으로 데이터가 추출됨

      => 한국에 주소가 있는 사람은 한국 주소 출력
         한국에 주소가 없는 사람은 null 출력
         리스트를 누락하지는 않는다.
